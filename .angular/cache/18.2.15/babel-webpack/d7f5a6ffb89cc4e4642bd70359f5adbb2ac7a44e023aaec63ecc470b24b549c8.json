{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let FilterPipe = /*#__PURE__*/(() => {\n  class FilterPipe {\n    transform(todos, filter) {\n      if (!todos) {\n        return [];\n      }\n      switch (filter) {\n        case 'completed':\n          return todos.filter(todo => todo.completion);\n        case 'pending':\n          return todos.filter(todo => !todo.completion);\n        default:\n          {\n            return todos;\n          }\n      }\n    }\n    static ɵfac = function FilterPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FilterPipe)();\n    };\n    static ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"filterTodo\",\n      type: FilterPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n  return FilterPipe;\n})();","map":{"version":3,"names":["FilterPipe","transform","todos","filter","todo","completion","pure","standalone"],"sources":["C:\\Users\\devloop\\Desktop\\merge-angular-repo\\todoapp\\src\\app\\todos\\todo\\filter\\filter.pipe.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Todo} from '../models/todo.model';\r\n\r\n@Pipe({\r\n  name: 'filterTodo',\r\n  standalone: true\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(todos: Todo[], filter: 'completed' | 'pending' | 'all' ): Todo[] {\r\n    if (!todos) {\r\n      return [];\r\n    }\r\n    switch (filter) {\r\n      case 'completed':\r\n        return todos.filter((todo: Todo) => todo.completion);\r\n      case 'pending':\r\n        return todos.filter((todo: Todo) => !todo.completion);\r\n      default: {\r\n        return todos;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":";AAOA,WAAaA,UAAU;EAAjB,MAAOA,UAAU;IAErBC,SAASA,CAACC,KAAa,EAAEC,MAAuC;MAC9D,IAAI,CAACD,KAAK,EAAE;QACV,OAAO,EAAE;MACX;MACA,QAAQC,MAAM;QACZ,KAAK,WAAW;UACd,OAAOD,KAAK,CAACC,MAAM,CAAEC,IAAU,IAAKA,IAAI,CAACC,UAAU,CAAC;QACtD,KAAK,SAAS;UACZ,OAAOH,KAAK,CAACC,MAAM,CAAEC,IAAU,IAAK,CAACA,IAAI,CAACC,UAAU,CAAC;QACvD;UAAS;YACP,OAAOH,KAAK;UACd;MACF;IACF;;uCAfWF,UAAU;IAAA;;;YAAVA,UAAU;MAAAM,IAAA;MAAAC,UAAA;IAAA;;SAAVP,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}