{"ast":null,"code":"import { filterReducer } from './filter/filter.reducer';\nimport { Todo } from './models/todo.model';\nimport { ADD_TODO, AddTodoAction, DELETE_COMPLETED_TODO, DELETE_TODO, DeleteAllCompletedTodoAction, DeleteTodoAction, EDIT_TODO, EditTodoAction, TOGGLE_ALL_TODO, TOGGLE_TODO, ToggleAllTodoAction, ToggleTodoAction } from './todo.actions';\nconst initialState = [new Todo('Watch match barcelona vs. manU'), new Todo('Play with valentin'), new Todo('Go to shop')].map((value, index) => {\n  if (index === 2) {\n    value.completion = true;\n  }\n  return value;\n});\nexport function todoReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      if (action instanceof AddTodoAction) {\n        const newTodo = new Todo(action.content);\n        return [...state, newTodo];\n      }\n      break;\n    case TOGGLE_TODO:\n      if (action instanceof ToggleTodoAction) {\n        return state.map(todo => {\n          if (todo.id === action.id) {\n            const todoRef = {\n              ...todo,\n              completion: !todo.completion\n            };\n            return todoRef;\n          } else {\n            return todo;\n          }\n        });\n      }\n      break;\n    case EDIT_TODO:\n      if (action instanceof EditTodoAction) {\n        return state.map(todo => {\n          if (todo.id === action.id) {\n            const todoRef = {\n              ...todo,\n              content: action.newContent\n            };\n            return todoRef;\n          } else {\n            return todo;\n          }\n        });\n      }\n      break;\n    case DELETE_TODO:\n      if (action instanceof DeleteTodoAction) {\n        return state.filter(todo => todo.id !== action.id);\n      }\n      break;\n    case TOGGLE_ALL_TODO:\n      if (action instanceof ToggleAllTodoAction) {\n        return state.map(todo => {\n          return {\n            ...todo,\n            completion: !todo.completion\n          };\n        });\n      }\n      break;\n    case DELETE_COMPLETED_TODO:\n      if (action instanceof DeleteAllCompletedTodoAction) {\n        return state.filter(todo => !todo.completion);\n      }\n      break;\n    default:\n      {\n        return state;\n      }\n  }\n  return state;\n}\nexport const reducers = {\n  todos: todoReducer,\n  //filter: (state: 'completed' | 'pending' | 'all' = 'all', action: Action<string>) => filterReducer(state, action as SetFilterAction)\n  filter: filterReducer\n};","map":{"version":3,"names":["filterReducer","Todo","ADD_TODO","AddTodoAction","DELETE_COMPLETED_TODO","DELETE_TODO","DeleteAllCompletedTodoAction","DeleteTodoAction","EDIT_TODO","EditTodoAction","TOGGLE_ALL_TODO","TOGGLE_TODO","ToggleAllTodoAction","ToggleTodoAction","initialState","map","value","index","completion","todoReducer","state","action","type","newTodo","content","todo","id","todoRef","newContent","filter","reducers","todos"],"sources":["C:\\Users\\devloop\\Desktop\\merge-angular-repo\\todoapp\\src\\app\\todos\\todo\\todo.reducer.ts"],"sourcesContent":["import { Action, ActionReducer, ActionReducerMap } from '@ngrx/store';\r\nimport { AppState } from '../../store/reducers/app.reducer';\r\nimport { filterReducer } from './filter/filter.reducer';\r\nimport { Todo } from './models/todo.model';\r\nimport {\r\n  ADD_TODO,\r\n  AddTodoAction,\r\n  DELETE_COMPLETED_TODO, DELETE_TODO,\r\n  DeleteAllCompletedTodoAction, DeleteTodoAction,\r\n  EDIT_TODO,\r\n  EditTodoAction,\r\n  TodoActions,\r\n  TOGGLE_ALL_TODO,\r\n  TOGGLE_TODO,\r\n  ToggleAllTodoAction,\r\n  ToggleTodoAction\r\n} from './todo.actions';\r\nimport { SetFilterAction } from './filter';\r\n\r\nexport interface TodosState extends AppState{\r\n  todos: Todo[];\r\n  filter: 'completed' | 'pending' | 'all' ;\r\n}\r\n\r\nconst initialState: Todo[] = [\r\n  new Todo('Watch match barcelona vs. manU'),\r\n  new Todo('Play with valentin'),\r\n  new Todo('Go to shop')]\r\n  .map((value: Todo, index: number) => {\r\n    if (index === 2) {\r\n      value.completion = true;\r\n    }\r\n    return value;\r\n  }, );\r\n\r\n\r\nexport function todoReducer(state: Todo[] = initialState, action: TodoActions): Todo[]  {\r\n\r\n\r\n  switch (action.type) {\r\n\r\n\r\n    case  ADD_TODO :\r\n      if (action instanceof AddTodoAction) {\r\n        const newTodo: Todo = new Todo(action.content);\r\n        return [...state, newTodo];\r\n      }\r\n      break;\r\n\r\n\r\n    case TOGGLE_TODO:\r\n      if (action instanceof ToggleTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          if (todo.id === action.id) {\r\n            const todoRef: Todo = {...todo, completion: !todo.completion};\r\n            return todoRef;\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n      }\r\n      break;\r\n\r\n\r\n    case EDIT_TODO:\r\n      if (action instanceof EditTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          if (todo.id === action.id) {\r\n            const todoRef: Todo = {...todo, content: action.newContent};\r\n            return todoRef;\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n      }\r\n      break;\r\n\r\n    case DELETE_TODO:\r\n      if (action instanceof DeleteTodoAction) {\r\n        return state.filter((todo: Todo) => todo.id !== action.id);\r\n      }\r\n      break;\r\n\r\n    case TOGGLE_ALL_TODO:\r\n      if (action instanceof ToggleAllTodoAction) {\r\n        return state.map((todo: Todo) => {\r\n          return {...todo, completion: !todo.completion}\r\n        });\r\n      }\r\n      break;\r\n    case  DELETE_COMPLETED_TODO:\r\n      if (action instanceof DeleteAllCompletedTodoAction) {\r\n        return state.filter((todo: Todo) => !todo.completion);\r\n      }\r\n      break;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\ntype todoReducerType = ActionReducer<Todo[], SetFilterAction>;\r\n\r\ntype filterReducerType = ActionReducer<'completed' | 'pending' | 'all' , SetFilterAction>;\r\n\r\nexport const reducers: ActionReducerMap<TodosState,SetFilterAction &TodoActions > = {\r\n  todos: todoReducer,\r\n  //filter: (state: 'completed' | 'pending' | 'all' = 'all', action: Action<string>) => filterReducer(state, action as SetFilterAction)\r\n  filter:  filterReducer\r\n}\r\n"],"mappings":"AAEA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,IAAI,QAAQ,qBAAqB;AAC1C,SACEC,QAAQ,EACRC,aAAa,EACbC,qBAAqB,EAAEC,WAAW,EAClCC,4BAA4B,EAAEC,gBAAgB,EAC9CC,SAAS,EACTC,cAAc,EAEdC,eAAe,EACfC,WAAW,EACXC,mBAAmB,EACnBC,gBAAgB,QACX,gBAAgB;AAQvB,MAAMC,YAAY,GAAW,CAC3B,IAAIb,IAAI,CAAC,gCAAgC,CAAC,EAC1C,IAAIA,IAAI,CAAC,oBAAoB,CAAC,EAC9B,IAAIA,IAAI,CAAC,YAAY,CAAC,CAAC,CACtBc,GAAG,CAAC,CAACC,KAAW,EAAEC,KAAa,KAAI;EAClC,IAAIA,KAAK,KAAK,CAAC,EAAE;IACfD,KAAK,CAACE,UAAU,GAAG,IAAI;EACzB;EACA,OAAOF,KAAK;AACd,CAAC,CAAG;AAGN,OAAM,SAAUG,WAAWA,CAACC,KAAA,GAAgBN,YAAY,EAAEO,MAAmB;EAG3E,QAAQA,MAAM,CAACC,IAAI;IAGjB,KAAMpB,QAAQ;MACZ,IAAImB,MAAM,YAAYlB,aAAa,EAAE;QACnC,MAAMoB,OAAO,GAAS,IAAItB,IAAI,CAACoB,MAAM,CAACG,OAAO,CAAC;QAC9C,OAAO,CAAC,GAAGJ,KAAK,EAAEG,OAAO,CAAC;MAC5B;MACA;IAGF,KAAKZ,WAAW;MACd,IAAIU,MAAM,YAAYR,gBAAgB,EAAE;QACtC,OAAOO,KAAK,CAACL,GAAG,CAAEU,IAAU,IAAI;UAC9B,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,EAAE;YACzB,MAAMC,OAAO,GAAS;cAAC,GAAGF,IAAI;cAAEP,UAAU,EAAE,CAACO,IAAI,CAACP;YAAU,CAAC;YAC7D,OAAOS,OAAO;UAChB,CAAC,MAAM;YACL,OAAOF,IAAI;UACb;QACF,CAAC,CAAC;MACJ;MACA;IAGF,KAAKjB,SAAS;MACZ,IAAIa,MAAM,YAAYZ,cAAc,EAAE;QACpC,OAAOW,KAAK,CAACL,GAAG,CAAEU,IAAU,IAAI;UAC9B,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,EAAE;YACzB,MAAMC,OAAO,GAAS;cAAC,GAAGF,IAAI;cAAED,OAAO,EAAEH,MAAM,CAACO;YAAU,CAAC;YAC3D,OAAOD,OAAO;UAChB,CAAC,MAAM;YACL,OAAOF,IAAI;UACb;QACF,CAAC,CAAC;MACJ;MACA;IAEF,KAAKpB,WAAW;MACd,IAAIgB,MAAM,YAAYd,gBAAgB,EAAE;QACtC,OAAOa,KAAK,CAACS,MAAM,CAAEJ,IAAU,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,CAAC;MAC5D;MACA;IAEF,KAAKhB,eAAe;MAClB,IAAIW,MAAM,YAAYT,mBAAmB,EAAE;QACzC,OAAOQ,KAAK,CAACL,GAAG,CAAEU,IAAU,IAAI;UAC9B,OAAO;YAAC,GAAGA,IAAI;YAAEP,UAAU,EAAE,CAACO,IAAI,CAACP;UAAU,CAAC;QAChD,CAAC,CAAC;MACJ;MACA;IACF,KAAMd,qBAAqB;MACzB,IAAIiB,MAAM,YAAYf,4BAA4B,EAAE;QAClD,OAAOc,KAAK,CAACS,MAAM,CAAEJ,IAAU,IAAK,CAACA,IAAI,CAACP,UAAU,CAAC;MACvD;MACA;IACF;MAAS;QACP,OAAOE,KAAK;MACd;EACF;EACA,OAAOA,KAAK;AACd;AAMA,OAAO,MAAMU,QAAQ,GAA+D;EAClFC,KAAK,EAAEZ,WAAW;EAClB;EACAU,MAAM,EAAG7B;CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}