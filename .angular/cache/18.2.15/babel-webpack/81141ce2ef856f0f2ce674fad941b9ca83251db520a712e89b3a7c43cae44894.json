{"ast":null,"code":"import { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\n//import {AppState} from \"../todo.reducer\";\nimport { Store } from \"@ngrx/store\";\nimport { DeleteTodoAction, EditTodoAction, ToggleTodoAction } from \"../todo.actions\";\nimport { NgClass } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nconst _c0 = [\"contentInput\"];\nconst _c1 = (a0, a1) => ({\n  \"completed\": a0,\n  \"editing\": a1\n});\nexport let ItemComponent = /*#__PURE__*/(() => {\n  class ItemComponent {\n    store;\n    todo;\n    contentInput;\n    chkField;\n    content;\n    editing;\n    constructor(store) {\n      this.store = store;\n    }\n    ngOnInit() {\n      this.chkField = new FormControl(this.todo.completion);\n      this.content = new FormControl(this.todo.content, Validators.required);\n      this.chkField.valueChanges.subscribe(value => this.store.dispatch(new ToggleTodoAction(this.todo.id)));\n    }\n    edit() {\n      this.editing = true;\n      setTimeout(() => {\n        this.contentInput.nativeElement.select();\n      }, 20);\n    }\n    leave() {\n      this.editing = false;\n      this.store.dispatch(new EditTodoAction(this.todo.id, this.content.value));\n    }\n    deleteTodo() {\n      this.store.dispatch(new DeleteTodoAction(this.todo.id));\n    }\n    static ɵfac = function ItemComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ItemComponent)(i0.ɵɵdirectiveInject(Store));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ItemComponent,\n      selectors: [[\"app-item\"]],\n      viewQuery: function ItemComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentInput = _t.first);\n        }\n      },\n      inputs: {\n        todo: \"todo\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 7,\n      consts: [[\"contentInput\", \"\"], [3, \"ngClass\"], [1, \"view\"], [\"type\", \"checkbox\", 1, \"toggle\", 3, \"formControl\"], [3, \"dblclick\"], [1, \"destroy\", 3, \"click\"], [1, \"edit\", 3, \"blur\", \"formControl\"]],\n      template: function ItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"li\", 1)(1, \"div\", 2);\n          i0.ɵɵelement(2, \"input\", 3);\n          i0.ɵɵelementStart(3, \"label\", 4);\n          i0.ɵɵlistener(\"dblclick\", function ItemComponent_Template_label_dblclick_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.edit());\n          });\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ItemComponent_Template_button_click_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.deleteTodo());\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"input\", 6, 0);\n          i0.ɵɵlistener(\"blur\", function ItemComponent_Template_input_blur_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.leave());\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c1, ctx.todo.completion, ctx.editing));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formControl\", ctx.chkField);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.todo.content, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formControl\", ctx.content);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, NgClass]\n    });\n  }\n  return ItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}