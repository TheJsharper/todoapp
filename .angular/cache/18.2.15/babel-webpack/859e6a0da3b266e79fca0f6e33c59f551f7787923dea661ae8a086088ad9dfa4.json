{"ast":null,"code":"import { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\n//import {AppState} from \"../todo.reducer\";\nimport { Store } from \"@ngrx/store\";\nimport { AddTodoAction } from \"../todo.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport let AddComponent = /*#__PURE__*/(() => {\n  class AddComponent {\n    store;\n    contentInput;\n    constructor(store) {\n      this.store = store;\n      this.contentInput = new FormControl(null, Validators.required);\n    }\n    addTodo() {\n      if (this.contentInput?.invalid) return;\n      const action = new AddTodoAction(this.contentInput.value ?? '');\n      this.store.dispatch(action);\n      this.contentInput?.setValue('');\n    }\n    static ɵfac = function AddComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddComponent)(i0.ɵɵdirectiveInject(Store));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddComponent,\n      selectors: [[\"app-add\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"header\"], [\"placeholder\", \"What needs to be done?\", \"autofocus\", \"\", 1, \"new-todo\", 3, \"keyup.enter\", \"formControl\"]],\n      template: function AddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"header\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"todos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵlistener(\"keyup.enter\", function AddComponent_Template_input_keyup_enter_3_listener() {\n            return ctx.addTodo();\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formControl\", ctx.contentInput);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return AddComponent;\n})();","map":{"version":3,"names":["FormControl","ReactiveFormsModule","Validators","Store","AddTodoAction","AddComponent","store","contentInput","constructor","required","addTodo","invalid","action","value","dispatch","setValue","i0","ɵɵdirectiveInject","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddComponent_Template_input_keyup_enter_3_listener","ɵɵadvance","ɵɵproperty","i1","DefaultValueAccessor","NgControlStatus","FormControlDirective","styles"],"sources":["C:\\Users\\devloop\\Desktop\\merge-angular-repo\\todoapp\\src\\app\\todos\\todo\\add\\add.component.ts","C:\\Users\\devloop\\Desktop\\merge-angular-repo\\todoapp\\src\\app\\todos\\todo\\add\\add.component.html"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, ReactiveFormsModule, Validators} from '@angular/forms'\r\n//import {AppState} from \"../todo.reducer\";\r\nimport {Store} from \"@ngrx/store\";\r\nimport {AddTodoAction} from \"../todo.actions\";\r\nimport { AppState } from '../../../store/reducers/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  imports: [ReactiveFormsModule],\r\n  styleUrls: ['./add.component.scss'],\r\n  standalone: true\r\n})\r\nexport class AddComponent {\r\n  contentInput: FormControl<string |null> ;\r\n\r\n  constructor(@Inject(Store)private store: Store<AppState>) {\r\n    this.contentInput = new FormControl<string | null>(null, Validators.required);\r\n  }\r\n\r\n \r\n  addTodo(): void {\r\n    if (this.contentInput?.invalid) return;\r\n\r\n    const action: AddTodoAction = new AddTodoAction(this.contentInput.value??'');\r\n    this.store.dispatch(action);\r\n    this.contentInput?.setValue('');\r\n\r\n  }\r\n\r\n}\r\n","<header class=\"header\">\r\n  <h1>todos</h1>\r\n  <input class=\"new-todo\" placeholder=\"What needs to be done?\"\r\n         [formControl]=\"contentInput\"\r\n         (keyup.enter)=\"addTodo()\"\r\n         autofocus>\r\n</header>\r\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAO,gBAAgB;AAC3E;AACA,SAAQC,KAAK,QAAO,aAAa;AACjC,SAAQC,aAAa,QAAO,iBAAiB;;;;AAU7C,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IAGWC,KAAA;IAFlCC,YAAY;IAEZC,YAAkCF,KAAsB;MAAtB,KAAAA,KAAK,GAALA,KAAK;MACrC,IAAI,CAACC,YAAY,GAAG,IAAIP,WAAW,CAAgB,IAAI,EAAEE,UAAU,CAACO,QAAQ,CAAC;IAC/E;IAGAC,OAAOA,CAAA;MACL,IAAI,IAAI,CAACH,YAAY,EAAEI,OAAO,EAAE;MAEhC,MAAMC,MAAM,GAAkB,IAAIR,aAAa,CAAC,IAAI,CAACG,YAAY,CAACM,KAAK,IAAE,EAAE,CAAC;MAC5E,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACF,MAAM,CAAC;MAC3B,IAAI,CAACL,YAAY,EAAEQ,QAAQ,CAAC,EAAE,CAAC;IAEjC;;uCAfWV,YAAY,EAAAW,EAAA,CAAAC,iBAAA,CAGHd,KAAK;IAAA;;YAHdE,YAAY;MAAAa,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAJ,EAAA,CAAAK,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCbvBX,EADF,CAAAa,cAAA,gBAAuB,SACjB;UAAAb,EAAA,CAAAc,MAAA,YAAK;UAAAd,EAAA,CAAAe,YAAA,EAAK;UACdf,EAAA,CAAAa,cAAA,eAGiB;UADVb,EAAA,CAAAgB,UAAA,yBAAAC,mDAAA;YAAA,OAAeL,GAAA,CAAAlB,OAAA,EAAS;UAAA,EAAC;UAElCM,EAJE,CAAAe,YAAA,EAGiB,EACV;;;UAHAf,EAAA,CAAAkB,SAAA,GAA4B;UAA5BlB,EAAA,CAAAmB,UAAA,gBAAAP,GAAA,CAAArB,YAAA,CAA4B;;;qBDOzBN,mBAAmB,EAAAmC,EAAA,CAAAC,oBAAA,EAAAD,EAAA,CAAAE,eAAA,EAAAF,EAAA,CAAAG,oBAAA;MAAAC,MAAA;IAAA;;SAIlBnC,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}